package com.github.throyer.todoapp.views;

import com.github.throyer.todoapp.domain.entities.User;
import com.github.throyer.todoapp.domain.exceptions.EmailUnavailableException;
import com.github.throyer.todoapp.domain.repositories.UserRepository;
import com.github.throyer.todoapp.infra.ui.ViewManager;
import com.github.throyer.todoapp.infra.ui.View;
import com.github.throyer.todoapp.infra.ui.Views;
import com.github.throyer.todoapp.utils.Icons;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import java.awt.Color;
import java.util.ArrayList;
import java.util.Optional;
import jiconfont.icons.FontAwesome;
import org.springframework.stereotype.Component;

@Component
public class CreateUser extends View {    
    private final UserRepository repository;
    
    public CreateUser(UserRepository repository) {
        this.repository = repository;

        initComponents();

        setIconImage(Icons.image(
            FontAwesome.LIST,
            45,
            new Color(160, 160, 160)
        ));

        setTitle(String.format("Cadastrar novo usuario"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        conainer = new javax.swing.JPanel();
        title = new javax.swing.JPanel();
        labelTitle = new javax.swing.JLabel();
        emailContainer = new javax.swing.JPanel();
        labelEmail = new javax.swing.JLabel();
        inputEmail = new javax.swing.JTextField();
        emailAvailabilityContainer = new javax.swing.JPanel();
        labelEmailAvailability = new javax.swing.JLabel();
        emailAvailabilityIcon = new javax.swing.JLabel();
        passwordContainer = new javax.swing.JPanel();
        labelPassword = new javax.swing.JLabel();
        inputPassword = new javax.swing.JPasswordField();
        passwordConfirmContainer = new javax.swing.JPanel();
        labelPasswordConfirm = new javax.swing.JLabel();
        inputPasswordConfirm = new javax.swing.JPasswordField();
        navigationContainer = new javax.swing.JPanel();
        buttonNavigateToLogin = new javax.swing.JButton();
        buttonCreateNewUser = new javax.swing.JButton();
        gambiarra = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        conainer.setLayout(new javax.swing.BoxLayout(conainer, javax.swing.BoxLayout.Y_AXIS));

        title.setLayout(new javax.swing.BoxLayout(title, javax.swing.BoxLayout.LINE_AXIS));

        labelTitle.setText("Adicionar Usuario");
        title.add(labelTitle);

        conainer.add(title);

        emailContainer.setLayout(new javax.swing.BoxLayout(emailContainer, javax.swing.BoxLayout.LINE_AXIS));

        labelEmail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelEmail.setText("Criar um nome de usuário:");
        labelEmail.setMaximumSize(new java.awt.Dimension(170, 14));
        labelEmail.setMinimumSize(new java.awt.Dimension(170, 14));
        labelEmail.setPreferredSize(new java.awt.Dimension(170, 14));
        emailContainer.add(labelEmail);

        inputEmail.setMaximumSize(new java.awt.Dimension(230, 25));
        inputEmail.setMinimumSize(new java.awt.Dimension(230, 25));
        inputEmail.setPreferredSize(new java.awt.Dimension(230, 25));
        inputEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputEmailOnFocusOut(evt);
            }
        });
        emailContainer.add(inputEmail);

        conainer.add(emailContainer);

        labelEmailAvailability.setForeground(new java.awt.Color(0, 102, 51));
        labelEmailAvailability.setToolTipText("");
        labelEmailAvailability.setMaximumSize(new java.awt.Dimension(200, 20));
        labelEmailAvailability.setMinimumSize(new java.awt.Dimension(200, 20));
        labelEmailAvailability.setPreferredSize(new java.awt.Dimension(200, 20));
        emailAvailabilityContainer.add(labelEmailAvailability);
        emailAvailabilityContainer.add(emailAvailabilityIcon);

        conainer.add(emailAvailabilityContainer);

        passwordContainer.setLayout(new javax.swing.BoxLayout(passwordContainer, javax.swing.BoxLayout.LINE_AXIS));

        labelPassword.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelPassword.setText("Escolha uma senha:");
        labelPassword.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelPassword.setMaximumSize(new java.awt.Dimension(170, 14));
        labelPassword.setMinimumSize(new java.awt.Dimension(170, 14));
        labelPassword.setPreferredSize(new java.awt.Dimension(170, 14));
        passwordContainer.add(labelPassword);

        inputPassword.setMaximumSize(new java.awt.Dimension(230, 25));
        inputPassword.setMinimumSize(new java.awt.Dimension(230, 25));
        inputPassword.setPreferredSize(new java.awt.Dimension(230, 25));
        passwordContainer.add(inputPassword);

        conainer.add(passwordContainer);

        passwordConfirmContainer.setLayout(new javax.swing.BoxLayout(passwordConfirmContainer, javax.swing.BoxLayout.LINE_AXIS));

        labelPasswordConfirm.setText("Digite a senha novamente:");
        labelPasswordConfirm.setMaximumSize(new java.awt.Dimension(170, 14));
        labelPasswordConfirm.setMinimumSize(new java.awt.Dimension(170, 14));
        labelPasswordConfirm.setPreferredSize(new java.awt.Dimension(170, 14));
        passwordConfirmContainer.add(labelPasswordConfirm);

        inputPasswordConfirm.setMaximumSize(new java.awt.Dimension(230, 25));
        inputPasswordConfirm.setMinimumSize(new java.awt.Dimension(230, 25));
        inputPasswordConfirm.setPreferredSize(new java.awt.Dimension(230, 25));
        passwordConfirmContainer.add(inputPasswordConfirm);

        conainer.add(passwordConfirmContainer);

        navigationContainer.setLayout(new javax.swing.BoxLayout(navigationContainer, javax.swing.BoxLayout.X_AXIS));

        buttonNavigateToLogin.setText("Voltar");
        buttonNavigateToLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onClickLoginButton(evt);
            }
        });
        navigationContainer.add(buttonNavigateToLogin);

        buttonCreateNewUser.setText("Cadastrar");
        buttonCreateNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onClickCreateUserButton(evt);
            }
        });
        navigationContainer.add(buttonCreateNewUser);

        conainer.add(navigationContainer);

        gambiarra.setMaximumSize(new java.awt.Dimension(8, 8));
        gambiarra.setMinimumSize(new java.awt.Dimension(8, 8));
        conainer.add(gambiarra);

        getContentPane().add(conainer);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void inputEmailOnFocusOut(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputEmailOnFocusOut
        handleEmailFocusOut();
    }//GEN-LAST:event_inputEmailOnFocusOut

    private void onClickLoginButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onClickLoginButton
        handleNavigateToLogin();
    }//GEN-LAST:event_onClickLoginButton

    private void onClickCreateUserButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onClickCreateUserButton
        handleCreateNewUser();
    }//GEN-LAST:event_onClickCreateUserButton

    private void handleEmailFocusOut() {
        var email = inputEmail.getText();
        
        if (email.isEmpty()) {
            return;
        }

        if (repository.existsByEmail(email)) {
            emailAvailabilityIcon.setIcon(Icons.icon(
                FontAwesome.TIMES, 
                35,
                new Color(255, 0, 0)
            ));
            labelEmailAvailability.setText("Nome de usuario indisponivel!");
            labelEmailAvailability.setForeground(new java.awt.Color(255, 0, 0));

            return;
        }
        
        emailAvailabilityIcon.setIcon(Icons.icon(
            FontAwesome.CHECK, 
            35, 
            new Color(0, 100, 0)
        ));
        labelEmailAvailability.setText("Nome de usuario disponivel!");
        labelEmailAvailability.setForeground(new java.awt.Color(0, 100, 51));
    }

    private void handleNavigateToLogin() {
        ViewManager.navigate(Views.CREATE_USER, Views.LOGIN);
    }

    private void handleCreateNewUser() {
        var email = inputEmail.getText();
        var password = String.valueOf(inputPassword.getPassword());
        var confirmation = String.valueOf(inputPasswordConfirm.getPassword());
        
        var errors = new ArrayList<String>();
        
        if (email.isEmpty()) {
            errors.add("Informe o email.");
        }
        
        if (password.isEmpty()) {
            errors.add("Informe a senha.");
        }
        
        if (confirmation.isEmpty()) {
            errors.add("Informe a confirmação da senha.");
        }

        if (!password.equals(confirmation)) {
            errors.add("Confirmação de senha incorreta.");
        }
                
        if (!errors.isEmpty()) {
            JOptionPane.showMessageDialog(
                new JFrame("Campos invalidos"),
                String.join("\n", errors)
            );
        }
        
        try {
            if (repository.existsByEmail(email)) {
                throw new EmailUnavailableException();
            }
        
            repository.save(new User(
                Optional.ofNullable(email.split(" ")[0]).orElse(email),
                email,
                password
            ));
            
            JOptionPane.showMessageDialog(
                new JFrame("Alert"),
                "Usuario cadastrado com sucesso."
            );
        } catch (EmailUnavailableException exception) {
            JOptionPane.showMessageDialog(
                new JFrame("Alert"),
                "Email indisponivel."
            );
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCreateNewUser;
    private javax.swing.JButton buttonNavigateToLogin;
    private javax.swing.JPanel conainer;
    private javax.swing.JPanel emailAvailabilityContainer;
    private javax.swing.JLabel emailAvailabilityIcon;
    private javax.swing.JPanel emailContainer;
    private javax.swing.JPanel gambiarra;
    private javax.swing.JTextField inputEmail;
    private javax.swing.JPasswordField inputPassword;
    private javax.swing.JPasswordField inputPasswordConfirm;
    private javax.swing.JLabel labelEmail;
    private javax.swing.JLabel labelEmailAvailability;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelPasswordConfirm;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JPanel navigationContainer;
    private javax.swing.JPanel passwordConfirmContainer;
    private javax.swing.JPanel passwordContainer;
    private javax.swing.JPanel title;
    // End of variables declaration//GEN-END:variables
}
